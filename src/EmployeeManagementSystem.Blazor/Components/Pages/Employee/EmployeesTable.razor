@page "/"

@using EmployeeManagementSystem.Blazor.Extensions
@using EmployeeManagementSystem.Blazor.Models
@using EmployeeManagementSystem.Blazor.Services
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]
@inject IToastService ToastService
@inject IEmployeeService EmployeeService
@inject NavigationManager NavigationManager

<PageTitle>EMS - Employees</PageTitle>

@if(Employees != null)
{
    <Card>
        <div class="table-responsive w-100">
            <div class="form-floating mb-3">
                <input class="form-control" id="floatingInputSearch" type="text" placeholder="Search" @oninput="FilterEmployees" />
                <label for="floatingInputSearch">Search</label>
            </div>
            <table class="table table-borderless mb-0">
                <tbody>
                    @foreach (var employee in FilteredEmployees)
                    {
                        <tr class="shadow-lg m-1 employee-row mb-5">
                            <td class="text-center align-middle text-nowrap text-truncate overflow-hidden">
                                <img class="rounded-circle" width="60" src="@employee.ImageUrl" />
                            </td>
                            <td class="align-middle text-nowrap text-truncate overflow-hidden">
                                <div class="pt-2">
                                    <div class="fs-5 fw-bold lh-sm">
                                        @employee.Name
                                    </div>
                                    <div class="lh-sm">
                                        @employee.JobTitle.GetDisplayName()
                                    </div>
                                </div>
                            </td>
                            <td class="text-center align-middle text-nowrap text-truncate overflow-hidden">
                                @employee.EmployeeType.GetDisplayName()
                            </td>
                            <td class="text-center align-middle fs-6 fw-bold text-nowrap text-truncate overflow-hidden">
                                $@employee.Salary
                            </td>
                            <td class="text-center align-middle text-nowrap text-truncate overflow-hidden">
                                <EditButton OnClickCallback="@(() => NavigateToEmployeeDetail(employee.Id))" />
                            </td>
                        </tr>
                    }                    
                </tbody>
            </table>
        </div>
    </Card>
}

@code {
    private List<Employee>? Employees { get; set; }
    private List<Employee> FilteredEmployees { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        var response = await EmployeeService.GetEmployeesAsync();
        Employees = response.Employees;
        if (Employees != null)
        {
            FilteredEmployees = Employees;            
        }
    }

    private void NavigateToEmployeeDetail(Guid id)
    {
        NavigationManager.NavigateTo($"/Employees/{id}");
    }

    private void FilterEmployees(ChangeEventArgs e)
    {
        var searchString = e.Value?.ToString()?.ToLower() ?? "";
        if (Employees != null)
        {
            FilteredEmployees = Employees.Where(x => x.Name.ToLower().IndexOf(searchString) >= 0).ToList();            
        }
    }
}
